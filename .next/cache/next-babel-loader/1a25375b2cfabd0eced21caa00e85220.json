{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query allQuestions {\\n    questions {\\n      prompt\\n      trap {\\n        name\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { Dimmer, Loader, Segment } from 'semantic-ui-react';\nvar GET_QUESTIONS = gql(_templateObject());\nexport default function QuestionList(_ref) {\n  var client = _ref.client;\n\n  var _useQuery = useQuery(GET_QUESTIONS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (data && data.questions) {\n    return React.createElement(\"ul\", null, data.questions.map(function (question) {\n      return React.createElement(\"li\", {\n        key: Math.random()\n      }, question.prompt, \" (\", question.trap.name, \")\");\n    }));\n  } else if (error) {\n    return React.createElement(\"div\", null, error.message);\n  } else {\n    return React.createElement(Dimmer, {\n      active: true\n    }, React.createElement(Loader, null));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}