{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation signUp($email: String!, $password: String!, $passwordConfirmation: String!, $firstName: String!, $lastName: String!) {\\n    signUp(email: $email, password: $password, passwordConfirmation: $passwordConfirmation, firstName: $firstName, lastName: $lastName) {\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation login($email: String!, $password: String!) {\\n    login(email: $email, password: $password) {\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    user {\\n      firstName\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nexport var GET_USER = gql(_templateObject());\nexport var AUTHENTICATE_USER = gql(_templateObject2());\nexport var SIGNUP_USER = gql(_templateObject3()); // Comment!","map":{"version":3,"sources":["/Users/mattl/Dev/personal/amitrapped/client/data/user.js"],"names":["gql","GET_USER","AUTHENTICATE_USER","SIGNUP_USER"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,OAAO,IAAMC,QAAQ,GAAGD,GAAH,mBAAd;AAOP,OAAO,IAAME,iBAAiB,GAAGF,GAAH,oBAAvB;AAQP,OAAO,IAAMG,WAAW,GAAGH,GAAH,oBAAjB,C,CAQP","sourcesContent":["import { gql } from 'apollo-boost'\n\nexport const GET_USER = gql`\n  query {\n    user {\n      firstName\n    }\n  }\n`\nexport const AUTHENTICATE_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`\n\nexport const SIGNUP_USER = gql`\n  mutation signUp($email: String!, $password: String!, $passwordConfirmation: String!, $firstName: String!, $lastName: String!) {\n    signUp(email: $email, password: $password, passwordConfirmation: $passwordConfirmation, firstName: $firstName, lastName: $lastName) {\n      token\n    }\n  }\n`\n\n// Comment!"]},"metadata":{},"sourceType":"module"}