{"ast":null,"code":"import { withData } from \"next-apollo\";\nimport { HttpLink } from \"apollo-boost\";\nimport { setContext } from 'apollo-link-context';\nimport { getToken } from './auth';\nvar authLink = setContext(function (_, _ref) {\n  var cache = _ref.cache;\n  var token = getToken();\n  return {\n    headers: {\n      authorization: token ? \"Bearer \".concat(token) : ''\n    }\n  };\n});\nvar httpLink = new HttpLink({\n  uri: \"http://127.0.0.1:3001/graphql\",\n  // Server URL (must be absolute)\n  cors: {\n    origin: 'http://127.0.0.1:3000',\n    credentials: true\n  }\n});\nexport default withData(function () {\n  return {\n    link: authLink.concat(httpLink)\n  };\n});","map":{"version":3,"sources":["/Users/mattl/Dev/personal/amitrapped/client/lib/apollo.js"],"names":["withData","HttpLink","setContext","getToken","authLink","_","cache","token","headers","authorization","httpLink","uri","cors","origin","credentials","link","concat"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,QAAT,QAAyB,QAAzB;AAGA,IAAMC,QAAQ,GAAGF,UAAU,CAAC,UAACG,CAAD,QAAgB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC1C,MAAIC,KAAK,GAAGJ,QAAQ,EAApB;AAEA,SAAO;AACLK,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEF,KAAK,oBAAaA,KAAb,IAAuB;AADpC;AADJ,GAAP;AAKD,CAR0B,CAA3B;AAUA,IAAMG,QAAQ,GAAG,IAAIT,QAAJ,CAAa;AAC5BU,EAAAA,GAAG,EAAE,+BADuB;AACU;AACtCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,uBADJ;AAEJC,IAAAA,WAAW,EAAE;AAFT;AAFsB,CAAb,CAAjB;AAQA,eAAed,QAAQ,CAAC,YAAM;AAC5B,SAAO;AACLe,IAAAA,IAAI,EAAEX,QAAQ,CAACY,MAAT,CAAgBN,QAAhB;AADD,GAAP;AAGD,CAJsB,CAAvB","sourcesContent":["import { withData } from \"next-apollo\";\nimport { HttpLink } from \"apollo-boost\";\nimport { setContext } from 'apollo-link-context'\nimport { getToken } from './auth'\n\n\nconst authLink = setContext((_, {cache}) => {\n  let token = getToken()\n\n  return {\n    headers: {\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  }\n})\n\nconst httpLink = new HttpLink({\n  uri: \"http://127.0.0.1:3001/graphql\", // Server URL (must be absolute)\n  cors: {\n    origin: 'http://127.0.0.1:3000',\n    credentials: true\n  }\n})\n\nexport default withData(() => {\n  return {\n    link: authLink.concat(httpLink)\n  }\n})"]},"metadata":{},"sourceType":"module"}