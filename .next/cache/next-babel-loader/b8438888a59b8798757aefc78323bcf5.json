{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useState } from 'react';\nimport { Button, Dimmer, Loader, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { Container } from 'next/app';\nimport Link from 'next/link';\nimport { loginReadyFor } from '../lib/auth';\nimport { Router } from 'next/router';\nimport { AUTHENTICATE_USER } from '../data/user';\n\nvar useLoginForm = function useLoginForm(callback) {\n  var _useState = useState({\n    email: '',\n    password: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var handleSubmit = function handleSubmit(e) {\n    if (e) e.preventDefault();\n    callback();\n  };\n\n  var handleChange = function handleChange(e) {\n    e.persist();\n    setInputs(_objectSpread({}, inputs, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  return {\n    handleSubmit: handleSubmit,\n    handleChange: handleChange,\n    inputs: inputs\n  };\n};\n\nvar Login = function Login(_ref) {\n  var token = _ref.token;\n\n  var _useMutation = useMutation(AUTHENTICATE_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      login = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      data = _useMutation2$.data,\n      error = _useMutation2$.error;\n\n  var _useLoginForm = useLoginForm(function () {\n    return login({\n      variables: inputs\n    });\n  }),\n      inputs = _useLoginForm.inputs,\n      handleChange = _useLoginForm.handleChange,\n      handleSubmit = _useLoginForm.handleSubmit;\n\n  if (token) {\n    Router.push('/home');\n  }\n\n  if (data && data.login.token) {\n    loginReadyFor(data.login.token);\n  }\n\n  return React.createElement(Container, null, error && React.createElement(Message, null, error.message), loading && React.createElement(Dimmer, null, React.createElement(Loader, null)), React.createElement(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '100vh'\n    },\n    verticalAlign: \"middle\"\n  }, React.createElement(Grid.Column, {\n    style: {\n      maxWidth: 450\n    }\n  }, React.createElement(Header, {\n    as: \"h2\",\n    color: \"teal\",\n    textAlign: \"center\"\n  }, \"Log-in to your account\"), React.createElement(Form, {\n    size: \"large\",\n    onSubmit: handleSubmit\n  }, React.createElement(Segment, {\n    stacked: true\n  }, React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"E-mail address\",\n    name: \"email\",\n    value: inputs.email,\n    onChange: handleChange\n  }), React.createElement(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    value: inputs.password,\n    onChange: handleChange\n  }), React.createElement(Button, {\n    color: \"teal\",\n    fluid: true,\n    size: \"large\",\n    type: \"submit\"\n  }, \"Login\"))), React.createElement(Message, null, \"New to us? \", React.createElement(Link, {\n    href: \"/signup\"\n  }, React.createElement(\"a\", null, \"Sign Up\"))))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}