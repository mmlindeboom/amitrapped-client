{"version":3,"file":"static/webpack/static/development/pages/signup.js.822a7757224f2e49af79.hot-update.js","sources":["webpack:///./components/SignupForm.js"],"sourcesContent":["import React from 'react';\nimport { useMutation } from '@apollo/react-hooks'\nimport { gql } from 'apollo-boost'\nimport { useState } from 'react'\nimport { Button, Dimmer, Loader, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport { Container } from 'next/app';\nimport { loginReadyFor } from '../lib/auth'\nimport { SIGNUP_USER } from '../data/user'\n\nconst useLoginForm = (callback) => {\n  const [inputs, setInputs] = useState({\n                                    email: '',\n                                    password: '',\n                                    passwordConfirmation: '',\n                                    firstName: '',\n                                    lastName: ''\n                                  })\n  const handleSubmit = (e) => {\n    if (e) e.preventDefault()\n    callback()\n  }\n  const handleChange = (e) => {\n    e.persist()\n    setInputs({...inputs, [e.target.name]: e.target.value})\n  }\n\n  return {\n    handleSubmit,\n    handleChange,\n    inputs\n  }\n}\n\n\nconst SignupForm = ({ token }) => {\n  const [signup, {loading, data, error}] = useMutation(SIGNUP_USER)\n  const {inputs, handleChange, handleSubmit} = useLoginForm(() => signup({variables: inputs}))\n\n  if (data && data.signUp.token) {\n    loginReadyFor(data.signUp.token)\n  }\n\n  return (\n    <Container>\n      {error &&\n        <Message>{error.message}</Message>\n      }\n      {loading &&\n        <Dimmer><Loader></Loader></Dimmer>\n      }\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Create an account\n          </Header>\n\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input fluid icon='user' iconPosition='left'\n                placeholder='E-mail address'\n                name=\"email\"\n                value={inputs.email}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                name='password'\n                value={inputs.password}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Confirm Password'\n                type='password'\n                name='passwordConfirmation'\n                value={inputs.passwordConfirmation}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='address card outline'\n                iconPosition='left'\n                placeholder='First Name'\n                name='firstName'\n                value={inputs.firstName}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='address card outline'\n                iconPosition='left'\n                placeholder='Last Name'\n                name='lastName'\n                value={inputs.lastName}\n                onChange={handleChange}\n              />\n\n\n              <Button color='teal' fluid size='large' type=\"submit\">\n                I'm ready to take the quiz!\n              </Button>\n            </Segment>\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </Container>\n)}\n\nexport default SignupForm"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;A","sourceRoot":""}